{
	"chainladder_version": "0.8.24",
	"extraction_date": "auto-generated",
	"cards": [
		{
			"name": "Triangle",
			"module": "chainladder.core.triangle",
			"full_name": "chainladder.core.triangle.Triangle",
			"signature": "( data=None, origin=None, development=None, columns=None, index=None, origin_format=None, development_format=None, cumulative=None, array_backend=None, pattern=False, trailing=True, *args, **kwargs)",
			"doc": "The core data structure of the chainladder package\n\nParameters\n----------\ndata: DataFrame\n    A single dataframe that contains columns represeting all other\n    arguments to the Triangle constructor\norigin: str or list\n     A representation of the accident, reporting or more generally the\n     origin period of the triangle that will map to the Origin dimension\ndevelopment: str or list\n    A representation of the development/valuation periods of the triangle\n    that will map to the Development dimension\ncolumns: str or list\n    A representation of the numeric data of the triangle that will map to\n    the columns dimension.  If None, then a single 'Total' key will be\n    generated.\nindex: str or list or None\n    A representation of the index of the triangle that will map to the\n    index dimension.  If None, then a single 'Total' key will be generated.\norigin_format: optional str\n    A string representation of the date format of the origin arg. If\n    omitted then date format will be inferred by pandas.\ndevelopment_format: optional str\n    A string representation of the date format of the development arg. If\n    omitted then date format will be inferred by pandas.\ncumulative: bool\n    Whether the triangle is cumulative or incremental.  This attribute is\n    required to use the ``grain`` and ``dev_to_val`` methods and will be\n    automatically set when invoking ``cum_to_incr`` or ``incr_to_cum`` methods.\ntrailing: bool\n    When partial origin periods are present, setting trailing to True will\n    ensure the most recent origin period is a full period and the oldest\n    origin is partial. If full origin periods are present in the data, then\n    trailing has no effect.\n\nAttributes\n----------\nindex: Series\n    Represents all available levels of the index dimension.\ncolumns: Series\n    Represents all available levels of the value dimension.\norigin: DatetimeIndex\n    Represents all available levels of the origin dimension.\ndevelopment: Series\n    Represents all available levels of the development dimension.\nkey_labels: list\n    Represents the ``index`` axis labels\nvirtual_columns: Series\n    Represents the subset of columns of the triangle that are virtual.\nvaluation: DatetimeIndex\n    Represents all valuation dates of each cell in the Triangle.\norigin_grain: str\n    The grain of the origin vector ('Y', 'S', 'Q', 'M')\ndevelopment_grain: str\n    The grain of the development vector ('Y', 'S', 'Q', 'M')\nshape: tuple\n    The 4D shape of the triangle instance with axes corresponding to (index, columns, origin, development)\nlink_ratio, age_to_age\n    Displays age-to-age ratios for the triangle.\nvaluation_date : date\n    The latest valuation date of the data\nloc: Triangle\n    pandas-style ``loc`` accessor\niloc: Triangle\n    pandas-style ``iloc`` accessor\nlatest_diagonal: Triangle\n    The latest diagonal of the triangle\nis_cumulative: bool\n    Whether the triangle is cumulative or not\nis_ultimate: bool\n    Whether the triangle has an ultimate valuation\nis_full: bool\n    Whether lower half of Triangle has been filled in\nis_val_tri:\n    Whether the triangle development period is expressed as valuation\n    periods.\nvalues: array\n    4D numpy array underlying the Triangle instance\nT: Triangle\n    Transpose index and columns of object.  Only available when Triangle is\n    convertible to DataFrame.",
			"fitted_attributes": [
				"cdf_",
				"cum_zeta_",
				"full_expectation_",
				"full_triangle_",
				"ibnr_"
			],
			"key_methods": [
				"append",
				"astype",
				"broadcast_axis",
				"compute",
				"copy",
				"cum_to_incr"
			]
		}
	]
}
